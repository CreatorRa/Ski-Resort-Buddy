#--- Swiss Data processing ---

using DataFrames
using CSV
using Dates

filepath1 = "c:\\Users\\Carter\\OneDrive\\Documents\\KLU\\KLU Studies\\Scientific Programming\\Clean Data\\more data\\data_monthly_CH_SLF.csv"

df = CSV.read(filepath1, DataFrame) #This writes the CSV into a dataframe

columns_to_drop =[
    "SCD1gt",
    "SCD10",
    "SCD20",	
    "SCD30",	
    "SCD50",	
    "SCD100",
    "HSmean_gapfill",
    "frac_gapfilled",
    "HSmax_gapfill",
    "SCD1_gapfill",
    "SCD1gt_gapfill",
    "SCD10_gapfill",
    "SCD20_gapfill",
    "SCD30_gapfill",
    "SCD50_gapfill",
    "SCD100_gapfill"
    ]
select!(df, Not(columns_to_drop)) #Removing unnecessary columns from the dataset.

dropmissing!(df, :HNsum) #This removes missing values for the Snow Depth varaible.

rename!(df, "Name" => "Region") #These functions rename the varaibles to improve readability. 
rename!(df, "HNsum" => "Snow Depth (cm)")
rename!(df, "HSmean" => "Mean Snow Depth (cm)")
rename!(df, "HSmax" => "Max Snow Depth (cm)")
rename!(df, "SCD1" => "Days where AVG Temp < 0C")
rename!(df, "year" => "Date")

insertcols!(df, 2, :Country => "Switzerland") # This code adds in a column for the country Switzerland. 

#The code below further cleans up the values by removing uncessary suffiexs making the values more uniform
df.Region = replace.(df.Region, "_CH_SLF" => "")
df.Region = replace.(df.Region, "Davos_Fluelastr_" => "Davos")
df.Region = replace.(df.Region, "St_Moritz" => "St Moritz")

#-- End of Swiss Data processing --

#-- Germany Data processing --

filepath2 = "C:\\Users\\Carter\\OneDrive\\Documents\\KLU\\KLU Studies\\Scientific Programming\\Clean Data\\more data\\data_monthly_DE_DWD.csv"

df2 = CSV.read(filepath2, DataFrame)

# Remove unnecessary columns
columns_to_drop =[
    "SCD1gt",
    "SCD10",
    "SCD20",	
    "SCD30",	
    "SCD50",	
    "SCD100",
    "HSmean_gapfill",
    "frac_gapfilled",
    "HSmax_gapfill",
    "SCD1_gapfill",
    "SCD1gt_gapfill",
    "SCD10_gapfill",
    "SCD20_gapfill",
    "SCD30_gapfill",
    "SCD50_gapfill",
    "SCD100_gapfill"
    ]
select!(df2, Not(columns_to_drop))
dropmissing!(df2, :HNsum)

rename!(df2, "Name" => "Region")
rename!(df2, "HNsum" => "Snow Depth (cm)")
rename!(df2, "HSmean" => "Mean Snow Depth (cm)")
rename!(df2, "HSmax" => "Max Snow Depth (cm)")
rename!(df2, "SCD1" => "Days where AVG Temp < 0C")
rename!(df2, "year" => "Date")

insertcols!(df2, 2, :Country => "Germany")

df2.Region = replace.(df2.Region, "Berchtesgaden_KKst_" => "Berchtesgaden")
df2.Region = replace.(df2.Region, "Feldberg_Schwarzwald" => "Feldberg")
df2.Region = replace.(df2.Region, "Garmisch_Partenkirchen" => "Garmisch-Partenkirchen")
df2.Region = replace.(df2.Region, "Oberndorf_Neckar" => "Oberstdorf")

#column_check = ["Region"]
#Unique_values = unique(df2[:, column_check])
#println("Unique values in 'Region' column:")
#println(Unique_values)

#-- End of Germany Data processing --

#-- Austria Data Processing ---


filepath3= "C:\\Users\\Carter\\OneDrive\\Documents\\KLU\\KLU Studies\\Scientific Programming\\Clean Data\\more data\\data_monthly_AT_HZB.csv"
df3 = CSV.read(filepath3, DataFrame)


colums_to_drop = [
    "SCD1gt",
    "SCD10",
    "SCD20",	
    "SCD30",	
    "SCD50",	
    "SCD100",
    "HSmean_gapfill",
    "frac_gapfilled",
    "HSmax_gapfill",
    "SCD1_gapfill",
    "SCD1gt_gapfill",
    "SCD10_gapfill",
    "SCD20_gapfill",
    "SCD30_gapfill",
    "SCD50_gapfill",
    "SCD100_gapfill"
]
select!(df3, Not(colums_to_drop))
dropmissing!(df3, :HNsum) 


rename!(df3, "Name" => "Region")
rename!(df3, "HNsum" => "Snow Depth (cm)")
rename!(df3, "HSmean" => "Mean Snow Depth (cm)")
rename!(df3, "HSmax" => "Max Snow Depth (cm)")
rename!(df3, "SCD1" => "Days where AVG Temp < 0C")
rename!(df3, "year" => "Date")

insertcols!(df3, 2, :Country => "Austria")

#--- End of Austria Data processing ---


#Combines the dataframes into a single data frame. 
df_combined = vcat(df, df2, df3)
filter!(:Date => >=(2000),df_combined) #This filters the data to only include data from the year 2000 onwards.
rename!(df_combined, "Date" => "Year")
rename!(df_combined, "month" => "Month")
rename!(df_combined, "Snow Depth (cm)" => "Monthly Snow Depth (cm)")
insertcols!(df_combined, 5, :Day => missing)
insertcols!(df_combined, 6, :"Elevation (m)" => missing)
insertcols!(df_combined, 7, :"Wind (Beaufort)" => missing)
insertcols!(df_combined, 8, :"Temperature (Â°C)" => missing)
insertcols!(df_combined, 9, :"Precipitation (mm)" => missing)
insertcols!(df_combined, 10,:"Daily Snow Depth (cm)" => missing)


#column_check = ["Country"]
#Unique_values = unique(df_combined[:, column_check])
#println("Unique values in 'country' column:")
#println(Unique_values)

#--- Save the combined data to a CSV file ---
#output_filepath_combined = "C:\\Users\\Carter\\OneDrive\\Documents\\KLU\\KLU Studies\\Scientific Programming\\Clean Data\\more data\\Combined_DACH_data.csv"
#println("Exporting the combined dataset to '$output_filepath_combined'...")
#CSV.write(output_filepath_combined, df_combined)

filepath_regions = "c:\\Users\\Carter\\OneDrive\\Documents\\KLU\\KLU Studies\\Scientific Programming\\Clean Data\\more data\\ski-regions-data.csv"
df_regions = CSV.read(filepath_regions, DataFrame)
df_regions.Date = Date.(df_regions.Date)
df_regions.Year = year.(df_regions.Date)
df_regions.Month = month.(df_regions.Date)
df_regions.Day = day.(df_regions.Date)

select!(df_regions, Not(:Date))
rename!(df_regions, "Snow Depth (cm)" => "Daily Snow Depth (cm)")

sort!(df_regions, :Region)
all_cols = names(df_regions)
date_cols_to_move = ["Year", "Month", "Day"]
other_cols = setdiff(all_cols, date_cols_to_move)
country_index = findfirst(isequal("Country"), other_cols)
new_order = vcat(
    other_cols[1:country_index],      # Columns up to and including 'Country'
    date_cols_to_move,                # Insert the date columns here
    other_cols[country_index+1:end]   # Add the rest of the columns
)
select!(df_regions, new_order)
insertcols!(df_regions, 11, :"Mean Snow Depth (cm)" => missing)
insertcols!(df_regions, 12, :"Monthly Snow Depth (cm)" => missing)
insertcols!(df_regions, 13, :"Max Snow Depth (cm)" => missing)
insertcols!(df_regions, 14, :"Days where AVG Temp < 0C" => missing)

# --- Export the edited DataFrame to a new CSV file ---
#Output_filepath_regions_edited = "c:\\Users\\Carter\\OneDrive\\Documents\\KLU\\KLU Studies\\Scientific Programming\\Clean Data\\more data\\Regions edited.csv"
#CSV.write(Output_filepath_regions_edited, df_regions)

# --- Append the two dataframes ---
final_col_order = names(df_combined)
df_regions_aligned = select(df_regions, final_col_order, :) # Reorder columns to match df_combined
df_appended = vcat(df_combined, df_regions_aligned)

#first(df_appended, 5)
#last(df_appended, 5)

# --- Export the final appended DataFrame to a new CSV file ---
#output_filepath_final = "c:\\Users\\Carter\\OneDrive\\Documents\\KLU\\KLU Studies\\Scientific Programming\\Clean Data\\more data\\DACH_SKi_Resort_data.csv"
#CSV.write(output_filepath_final, df_appended)
